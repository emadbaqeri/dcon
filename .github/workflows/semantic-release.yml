name: Semantic Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'skip ci') }}
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run semantic-release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
          GIT_AUTHOR_NAME: semantic-release-bot
          GIT_AUTHOR_EMAIL: semantic-release-bot@martynus.net
          GIT_COMMITTER_NAME: semantic-release-bot
          GIT_COMMITTER_EMAIL: semantic-release-bot@martynus.net
        run: |
          npx semantic-release
          # Capture the new version if a release was created
          NEW_VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Trigger binary build workflow
        if: steps.semantic_release.outputs.new_version != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
          script: |
            const newVersion = '${{ steps.semantic_release.outputs.new_version }}';
            if (newVersion) {
              console.log(`Triggering binary build for version: ${newVersion}`);
              await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'release.yml',
                ref: 'main',
                inputs: {
                  tag: newVersion
                }
              });
            }
